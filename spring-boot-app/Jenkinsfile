pipeline {
    agent { label 'agent-1'}
    options {
        disableConcurrentBuilds()
    }
    stages {
        stage('MVN Install') {
          steps {
            script {
                sh """
                sudo yum install -y maven
                """
            }
          }
        }
        stage('MVN clean') {
            steps {
                script {
                    sh """
                    cd spring-boot-app
                    mvn clean package
                    """ 
                }
            }
        }
        // stage('Docker Build and run') {
        //     steps {
        //         script {
        //             sh """
        //             cd spring-boot-app
        //             /usr/bin/docker build -t java:v1 .
        //             /usr/bin/docker run -d -p 80:80 -t java:v1 
        //             """
        //         }
        //     }
        // }
        stage('ECR') {
            steps {
                script {
                    withAWS(region: 'us-east-1', credentials: 'aws-ecr') {
                        sh """
                        cd spring-boot-app
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 148761662695.dkr.ecr.us-east-1.amazonaws.com
                        docker build -t 148761662695.dkr.ecr.us-east-1.amazonaws.com/java/project-1:1.0 .
                        docker push 148761662695.dkr.ecr.us-east-1.amazonaws.com/java/project-1:1.0
                        """
                    }
                }
            }
        }
        // stage('Sonar') {
        //         steps {
        //             script {
        //                 sh """
        //                 sudo adduser sonarqube
        //                 sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.4.1.88267.zip
        //                 sudo unzip *
        //                 sudo chown -R sonarqube:sonarqube /opt/sonarqube
        //                 sudo chmod -R 775 /opt/sonarqube
        //                 sudo cd /opt/sonarqube/bin/linux-x86-64
        //                 ./sonar.sh start
        //                 """
        //         }
        //      }
        // }
    }
    post {
        success {
            echo "pipeline success"
        }
        failure {
            echo "pipeline failed"
        }
        always {
            echo "whatever"
            deleteDir()
        }
    }
}



